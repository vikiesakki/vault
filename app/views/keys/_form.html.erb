<%= form_for key, url: { controller: :keys, action: action } do |f| %>
  <div class='box tabular'>
    <p><%= f.label :name, t('key.attr.name') %>
    <% if User.current.allowed_to?(:edit_keys, @project) %>
      <%= f.text_field :name %></p>
    <% else %>
      <%= f.text_field :name,:readonly => true %></p>
    <% end %>

    <p><%= f.label :login, t('key.attr.login') %>
    <% if User.current.allowed_to?(:edit_keys, @project) %>
      <%= f.text_field :login %></p>
    <% else %>
      <%= f.text_field :login,:readonly => true %></p>
    <% end %>

    <p><%= f.label :url, t('key.attr.url') %>
    <% if User.current.allowed_to?(:edit_keys, @project) %>
      <%= f.text_field :url %></p>
    <% else %>
      <%= f.text_field :url,:readonly => true %></p>
    <% end %>

    <p><%= f.label :type %>
    <%= f.select :type, key_types %></p>

    <p><%= f.label :body, t('key.attr.body') %>
    <% if User.current.allowed_to?(:edit_keys, @project) %>
      <%= f.text_field :body %></p>
    <% else %>
      <%= f.text_field :body,:readonly => true %></p>
    <% end %>

    <p><%= f.label :tags, t('key.attr.tags') %>
    <%= f.text_field :tags, value: Vault::Tag.tags_to_string(key.tags), class: 'autocomplete' %></p>

    <p><%= f.label :file, t('key.attr.file') %>
    <% if User.current.allowed_to?(:edit_keys, @project) %>
      <%= f.file_field :file %></p>
    <% else %>
      <%= f.file_field :file,:readonly => true %></p>
    <% end %>

    <p><%= f.label :comment, t('key.attr.comment') %>
    <% if User.current.allowed_to?(:edit_keys, @project) %>
      <%= f.text_area :comment, class: 'wiki-edit' %></p>
    <% else %>
      <%= f.text_area :comment, class: 'wiki-edit',:readonly => true %></p>
    <% end %>

    <p><%= f.label :is_public %>
    <%= f.check_box :is_public %></p>

    <% if User.current.allowed_to?(:manage_whitelist_keys, @project) %>
      <%  whitelisted = @key.whitelist.split(",") %>
        <%  all_users = @project.memberships.active.where(:users => {:type => 'User'}).sort.map {|u| [u.principal, u.principal.id.to_s]} %>
        <%  all_groups = @project.memberships.active.where(:users => {:type => 'Group'}).sort.map {|u| [u.principal, u.principal.id.to_s]} %>
        <%  all_users = all_groups|all_users %>
      <div id="vault_whitelist">
        <%= f.label t('key.attr.whitelist') ,class: "whitelist_users"%>

      <table class='whitelist_users'>
        <tr>
          <td style ='padding-left:0'>
            <%= label_tag 'selected_users', t('key.whitelist.selected_members'), class: "no-css" %>
            <br />
            <%= select_tag 'whitelist',
									options_for_select(all_users.select {|u| whitelisted.include?(u[1])}),
									id: 'selected_users', multiple: true, size: 10, 
									ondblclick: "moveOptions(this.form.selected_users, this.form.available_users)" %>
          </td>
					<td class="buttons">
						 <input type="button" value="&#8594;"
							onclick="moveOptions(this.form.selected_users, this.form.available_users);" /><br />
						 <input type="button" value="&#8592;"
							onclick="moveOptions(this.form.available_users, this.form.selected_users);" />
					 </td>

          <td>
            <%= label_tag 'available_users', t('key.whitelist.available_members'), class: "no-css" %>
            <br />
            <%= select_tag 'available_users',
									options_for_select(all_users.select {|u| not whitelisted.include?(u[1])}),
									id: 'available_users', multiple: true, size: 10,
									ondblclick: "moveOptions(this.form.available_users, this.form.selected_users)" %>
          </td>
        </tr>
      </table>

      </div>
    <% end %>
  </div>

  <% if User.current.allowed_to?(:edit_keys, @project) %>
    <%= f.submit t('button_save') %>
  <% else %>

  <% end %>
<% end %>
<%= javascript_tag do %>
 $(document).ready(function(){
   $('#vault_whitelist').closest('form').submit(function(){
     $('#selected_users option').prop('selected', true);
   });
 });
 <% end %>
